# /etc/opt/homepage/config/services.yaml
# Ref: https://gethomepage.dev/configs/services/
#   https://gethomepage.dev/installation/docker/#using-environment-secrets
---
# - Group A:
#     - Service A:
#         icon: service.png
#         href: http://service.host/
#         description: Foo management
#         ping: service.host
#         siteMonitor: http://service.host/
#         container: my-container
#         widget:
#           type: service-a
#           url: http://service.host
#           key: demo

# Icons:
# NAME.[png|svg]
# https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/
# https://github.com/walkxcode/dashboard-icons/tree/master/svg/
# mdi-NAME
# https://pictogrammers.com/library/mdi/
# si-NAME
# https://simpleicons.org/
# sh-NAME.[svg|png|webp]
# https://selfh.st/icons/

# Widgets: https://gethomepage.dev/widgets/
# iFrame: https://gethomepage.dev/widgets/services/iframe/#full-example
#   - internally public grafana dashboard, uptime?
#   - home assistant dashboard
# Custom API: https://gethomepage.dev/widgets/services/customapi/

- Calendar:
    - Home events:
        href: https://calendar.google.com/
        widget:
          type: calendar
          firstDayInWeek: {{ personal.firstDayInWeek }} # optional - defaults to monday
          view: monthly # optional - possible values monthly, agenda
          maxEvents: 10 # optional - defaults to 10
          showTime: true # optional - show time for event happening today - defaults to false
          # timezone: {{ personal.timezone }} # optional - defaults to browser timezone
          integrations: # optional
            - type: ical # Show calendar events from another service
              url: {% raw %}{{HOME_ICAL_URL}}{% endraw %} # iCal address, public or secret
              name: Home # required - name for these calendar events
              color: 'teal' # https://gethomepage.dev/configs/settings/#color-palette
              params:
                showName: false

# - Media:
#     - Jellyfin:
#         icon: jellyfin.svg
#         href: https://media.{{ site.url }}/
#         description: Media server for movies and TV shows
#         # widget:
#         #   type: jellyfin
#         #   url: http://jellyfin.host.or.ip
#         #   key: demo
#         #   enableBlocks: true # optional, defaults to false
#         #   enableNowPlaying: true # optional, defaults to true
#         #   enableUser: true # optional, defaults to false
#         #   showEpisodeNumber: true # optional, defaults to false
#         #   expandOneStreamToTwoRows: false # optional, defaults to true
#     - Calibre:
#         icon: calibre.svg
#         href: https://books.{{ site.url }}/
#         description: eBook server
#         # widget:
#         #   type: calibreweb
#         #   url: http://your.calibreweb.host:port
#         #   username: username
#         #   password: password
#     - Audiobookshelf:
#         icon: audiobookshelf.svg
#         href: https://audiobooks.{{ site.url }}/
#         description: Audiobook server
#         # widget:
#         #   type: audiobookshelf
#         #   url: http://audiobookshelf.host.or.ip:port
#         #   key: demo
#     - Immich:
#         icon: immich.svg
#         href: https://photos.{{ site.url }}/
#         description: Photo server
#         # widget:
#         #   type: immich
#         #   url: http://immich.host.or.ip
#         #   key: demo
#     - FreshRSS:
#         icon: freshrss.svg
#         href: https://rss.{{ site.url }}/
#         description: RSS reader
#         # widget:
#         #   type: freshrss
#         #   url: http://freshrss.host.or.ip:port
#         #   username: username
#         #   password: password

- Home:
    - Home Assistant:
        icon: home-assistant-alt.svg
        href: https://home.{{ site.url }}/
        description: Home automation dashboard
        # widget:
        #   type: homeassistant
        #   url: http://homeassistant.host.or.ip:port
        #   key: access_token
        #   custom:
        #     - state: weather
        #       label: Apparent Temperature
        #       value: "{attributes.apparent_temperature} {attributes.temperature_unit}"
#         #     - state: sensor.total_power
#         #     - state: sensor.total_energy_today
#         #       label: energy today
#         #     - template: "{% raw %}{{ states.switch|selectattr('state','equalto','on')|list|length }}{% endraw %}"
#         #       label: switches on
#     - Frigate:
#         icon: frigate.svg
#         href: https://cameras.{{ site.url }}/
#         description: Camera server
#         # widget:
#         #   type: frigate
#         #   url: http://frigate.host.or.ip:port
#         #   enableRecentEvents: true # Optional, defaults to false
    - Zigbee2MQTT:
        icon: zigbee2mqtt.svg
        href: https://zigbee.{{ site.url }}/
        description: Zigbee network manager
    - ESPHome:
        icon: esphome.svg
        href: https://iot.{{ site.url }}/
        description: IoT device framework

# - Life:
#     - Mealie:
#         icon: mealie.svg
#         href: https://recipes.{{ site.url }}/
#         description: Recipe server
#         # widget:
#         #   type: mealie
#         #   url: http://mealie.host.or.ip
#         #   key: demo
#         #   version: 2 # only required if version > 1, defaults to 1
#     - Ghostfolio:
#         icon: sh-ghostfolio.svg
#         href: https://wealth.{{ site.url }}/
#         description: Portfolio tracker
#         # widget:
#         #   type: ghostfolio
#         #   url: http://ghostfolio.host.or.ip
#         #   key: demo

# - Dev:
#     - Forgejo:
#         icon: forgejo.svg
#         href: https://git.{{ site.url }}/
#         description: Git server and CI/CD
#         # widget:
#         #   type: gitea
#         #   url: http://forgejo.host.or.ip:port
#         #   key: demo

- Core Services:
    - TP-Link:
        icon: sh-tp-link.svg
        href: https://wifi.{{ site.url }}/
        description: WiFi AP
    - pfSense:
        icon: pfsense.svg
        href: https://router.{{ site.url }}/
        description: Router and firewall
        # widget:
          # type: pfsense
          # url: http://pfsense.host.or.ip:port
          # username: user # optional, or API key
          # password: pass # optional, or API key
          # headers: # optional, or username/password
          #   X-API-Key: key
          # wan: igb0
          # version: 2 # optional, defaults to 1 for api v1
          # fields: ["load", "memory", "temp", "wanStatus"] # optional
    - Authelia:
        icon: sh-authelia.svg
        href: https://auth.{{ site.url }}/
        description: Authentication and SSO
    - LLDAP:
        icon: mdi-account-group
        href: https://ldap.{{ site.url }}/
        description: User management
    - Traefik Secsvcs:
        icon: traefik-proxy.svg
        href: https://secproxy.{{ site.url }}/
        description: Proxy dashboard for secsvcs
    - Traefik Homesvcs:
        icon: traefik-proxy.svg
        href: https://homeproxy.{{ site.url }}/
        description: Proxy dashboard for homesvcs
    - Traefik Websvcs:
        icon: traefik-proxy.svg
        href: https://webproxy.{{ site.url }}/
        description: Proxy dashboard for websvcs

- Infra:
    - Proxmox 1:
        icon: proxmox.svg
        href: https://pve1.{{ site.url }}:8006/
        description: VM hypervisor 1
        widget:
          type: proxmox
          url: https://pve1.{{ site.url }}:8006
          username: api_ro@pam!homepage
          password: {% raw %}{{DASH_PVE1_TOKEN}}{% endraw %}
    - Proxmox 2:
        icon: proxmox.svg
        href: https://pve2.{{ site.url }}:8006/
        description: VM hypervisor 2
        widget:
          type: proxmox
          url: https://pve2.{{ site.url }}:8006
          username: api_ro@pam!homepage
          password: {% raw %}{{DASH_PVE2_TOKEN}}{% endraw %}
    - Proxmox Backup:
        icon: mdi-cloud-upload
        href: https://pbs2.{{ site.url }}:8007/
        description: VM backup server
        widget:
          type: proxmoxbackupserver
          url: https://pbs2.{{ site.url }}:8007
          username: api_ro@pam!homepage
          password: {% raw %}{{DASH_PBS2_TOKEN}}{% endraw %}
    - VM pfsense:
        icon: mdi-server
        href: https://pve1.{{ site.url }}:8006/#v1:0:=qemu%2F{{ router.vm_id }}:4:::::::6
        description: VM for the pfSense router
        proxmoxNode: pve
        proxmoxVMID: {{ router.vm_id }}
        proxmoxType: qemu
    - VM secsvcs:
        icon: mdi-server
        href: https://pve1.{{ site.url }}:8006/#v1:0:=qemu%2F{{ secsvcs.vm_id }}:4:::::::6
        description: VM for secure services
        proxmoxNode: pve
        proxmoxVMID: {{ secsvcs.vm_id }}
        proxmoxType: qemu
    - VM homesvcs:
        icon: mdi-server
        href: https://pve1.{{ site.url }}:8006/#v1:0:=qemu%2F{{ homesvcs.vm_id }}:4:::::::6
        description: VM for secure services
        proxmoxNode: pve
        proxmoxVMID: {{ homesvcs.vm_id }}
        proxmoxType: qemu

- Telemetry:
    - Grafana:
        icon: grafana.svg
        href: https://graph.{{ site.url }}/
        description: Metric dashboards
    - Victoria Logs:
        icon: sh-victoriametrics.svg
        href: https://logs.{{ site.url }}/
        description: Logs
    - Gatus:
        icon: gatus.svg
        href: https://uptime.{{ site.url }}/
        description: Uptime monitoring
        # widget:
        #   type: gatus
        #   url: http://gatus.host.or.ip:port
    - Alertmanager:
        icon: alertmanager.svg
        href: https://alert.{{ site.url }}/
        description: Alerts
    - Victoria Metrics:
        icon: sh-victoriametrics-light.svg
        href: https://metrics.{{ site.url }}/vmui/
        description: Metrics
        # widget:
        #   type: prometheus
        #   url: http://prometheushost:port
    - VM Alert:
        icon: mdi-alert-decagram
        href: https://vmalert.{{ site.url }}/
        description: Alerting rules
    - Ntfy:
        icon: ntfy.svg
        href: https://push.{{ site.url }}/
        description: Notifications
...
