# /etc/opt/traefik/config/dynamic/traefik.yml
# References:
#   - https://www.simplecto.com/use-traefik-with-nginx-apache-caddyserver-serve-static-files/
#   - https://doc.traefik.io/traefik/reference/dynamic-configuration/file/
---
http:
  routers:
    root:
      rule: Host(`{{ site.url }}`)
      entryPoints: websecure
      service: nginx@file
      middlewares:
        - www-redirect@file
      tls:
        options: intermediate@file
        certResolver: le-http-production
    traefik:
      rule: Host(`webproxy.{{ site.url }}`)
      entryPoints: websecure
      service: api@internal
      middlewares:
        - authelia@file
        - secure-headers@file
      tls:
        options: intermediate@file
        certResolver: le-http-production
    dashy:
      rule: Host(`dash.{{ site.url }}`)
      entryPoints: websecure
      service: dashy@file
      middlewares:
        - authelia-basic@file
        - secure-headers@file
      tls:
        options: intermediate@file
        certResolver: le-http-production
    static-files:
      rule: Host(`www.{{ site.url }}`, `static.{{ site.url }}`, `blog.{{ site.url }}`, `wifi.{{ site.url }}`)
      entryPoints: websecure
      service: nginx@file
      middlewares:
        - gzip@file
        - secure-headers@file
      tls:
        options: intermediate@file
        certResolver: le-http-production
    # Routes only exist to get the ACME certs
    pve1:
      rule: Host(`pve1.{{ site.url }}`)
      entryPoints: websecure
      service: s403@file
      tls:
        options: intermediate@file
        certResolver: le-http-production
    pve2:
      rule: Host(`pve2.{{ site.url }}`)
      entryPoints: websecure
      service: s403@file
      tls:
        options: intermediate@file
        certResolver: le-http-production
    pbs2:
      rule: Host(`pbs2.{{ site.url }}`)
      entryPoints: websecure
      service: s403@file
      tls:
        options: intermediate@file
        certResolver: le-http-production
    router:
      rule: Host(`router.{{ site.url }}`)
      entryPoints: websecure
      service: s403@file
      tls:
        options: intermediate@file
        certResolver: le-http-production
    vpnui:
      rule: Host(`vpn-ui.{{ site.url }}`)
      entryPoints: websecure
      service: s403@file
      tls:
        options: intermediate@file
        certResolver: le-http-production
    # example-static:
    #   rule: (Host(`example.{{ site.url }}`) && Path(`/static`))
    #   entryPoints: websecure
    #   service: nginx@file
    #   middlewares:
    #     - gzip@file
    #     - static-strip-prefix@file
    #   tls:
    #     options: intermediate@file
    #     certResolver: le-http-production
  services:
    nginx:
      loadBalancer:
        servers:
          - url: http://nginx:8100/
    dashy:
      loadBalancer:
        servers:
          - url: http://dashy:4000/
    s403:
      loadBalancer:
        servers:
          - url: https://www.{{ site.url }}/error/403.html
  middlewares:
    authelia:
      forwardAuth:
        address: https://auth.{{ site.url }}:9091/api/verify?rd=https%3A%2F%2Fauth.{{ site.url }}%2F
        trustForwardHeader: true
        authResponseHeaders:
          - "Remote-User"
          - "Remote-Groups"
          - "Remote-Email"
          - "Remote-Name"
        tls:
          ca: /certificates/ca.chain.crt
          cert: /certificates/webproxy.client.crt
          key: /certificates/webproxy.key
    authelia-basic:
      forwardAuth:
        address: https://auth.{{ site.url }}:9091/api/verify?auth=basic
        trustForwardHeader: true
        authResponseHeaders:
          - "Remote-User"
          - "Remote-Groups"
          - "Remote-Email"
          - "Remote-Name"
        tls:
          ca: /certificates/ca.chain.crt
          cert: /certificates/webproxy.client.crt
          key: /certificates/webproxy.key
    secure-headers:
      headers:
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        # HSTS, 2yrs
        stsSeconds: 63072000
        stsIncludeSubdomains: true
        forceSTSHeader: true
        # Superseded by CSP on newer browsers
        customFrameOptionsValue: "allow-from https:{{ site.url }}"
        contentTypeNosniff: true
        referrerPolicy: "same-origin"
        # Setting CSP is more secure but it can break apps. Consider script-src 'self';
        contentSecurityPolicy: "frame-ancestors 'https://*.{{ site.url }}'; object-src 'none';"
        permissionsPolicy: "camera=(), geolocation=(), microphone=(), payment=(), usb=()"

    gzip:
      compress: {}
    static-strip-prefix:
      stripPrefix:
        prefixes: "/static"
        forceSlash: false
    www-redirect:
      redirectRegex:
        regex: "^https?://?(.+)"
        replacement: "https://www.${1}"
        permanent: true
tls:
  # https://ssl-config.mozilla.org/#server=traefik&version=2.10&config=intermediate&guideline=5.7
  options:
    modern:
      minVersion: "VersionTLS13"
    intermediate:
      minVersion: "VersionTLS12"
      sniStrict: true
      cipherSuites:
        - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
        - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
        - "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
        - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
      curvePreferences:
        - CurveP521
        - CurveP384
...
