# /etc/haproxy/haproxy.cfg
# Ref: https://www.haproxy.org/download/2.6/doc/configuration.txt
# Ref: https://www.haproxy.com/blog/the-four-essential-sections-of-an-haproxy-configuration
global
    log /dev/log local0 info
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # https://ssl-config.mozilla.org/#server=haproxy&version=2.6.12&config=intermediate&openssl=3.0.11&guideline=5.7
    # intermediate configuration
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/haproxy/dhparam
    ssl-dh-param-file /etc/haproxy/dhparam

defaults
    log global
    option dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

cache www_cache
    total-max-size 10       # in MB
    max-object-size 1000000 # in bytes (1 MB)
    max-age 60              # in seconds (1 min)

# Custom configs
# Docs: https://cbonte.github.io/haproxy-dconv/configuration-1.5.html
frontend https_all
    mode tcp
    bind *:443
    # Wait for a client hello for at most 5 seconds
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }

    acl vpn_host req_ssl_sni -i vpn.{{ site.url }}
    use_backend local_https_vpn if vpn_host

    acl vpnui_host req_ssl_sni -i vpn-ui.{{ site.url }}
    use_backend vpnui_https_fwd if vpnui_host

{% for svc in secsvcs_subdomains %}
    acl {{ svc }} req_ssl_sni -i {{ svc }}.{{ site.url }}{% endfor %}
    use_backend secsvcs_https_proxy if {{ secsvcs_subdomains | join(' || ') }}

{% for svc in homesvcs_subdomains %}
    acl {{ svc }} req_ssl_sni -i {{ svc }}.{{ site.url }}{% endfor %}
    use_backend homesvcs_https_proxy if {{ homesvcs_subdomains | join(' || ') }}

    acl www_host req_ssl_sni -i {{ site.url }} || www.{{ site.url }}
    http-request cache-use www_cache if www_host
    http-response cache-store www_cache
    use_backend websvcs_https_proxy if www_host

    default_backend websvcs_https_proxy

frontend http_all
    mode http
    bind *:80
    acl vpn_host hdr(host) -i vpn.{{ site.url }}
    acl le_acme path_beg -i /.well-known/acme-challenge/

    # use_backend local_http_vpn if vpn_host
    http-request redirect scheme https if vpn_host !le_acme

    use_backend local_acme_vpn if vpn_host le_acme

{% for svc in secsvcs_subdomains %}
    acl {{ svc }} hdr(host) -i {{ svc }}.{{ site.url }}{% endfor %}
    use_backend secsvcs_http_proxy if {{ secsvcs_subdomains | join(' || ') }}

{% for svc in homesvcs_subdomains %}
    acl {{ svc }} hdr(host) -i {{ svc }}.{{ site.url }}{% endfor %}
    use_backend homesvcs_http_proxy if {{ homesvcs_subdomains | join(' || ') }}

    # Intentionally let vpn-ui fall thru for acme    
    default_backend websvcs_http_proxy

# https://www.liip.ch/en/blog/haproxy-selective-tls-termination
frontend https_vpnui
    mode http
    bind 127.0.0.1:10443 ssl crt /etc/haproxy/certs/vpnui.all.pem accept-proxy
    # HSTS, 2yrs
    http-response set-header Strict-Transport-Security max-age=63072000
    default_backend local_http_vpnui

# backends, naming: server_protocol_purpose

backend local_acme_vpn
    mode http
    option forwardfor
    server acme_vpn 127.0.0.1:8080

# debug only
# backend local_http_vpn
#     mode http
#     option forwardfor
#     server vpn_http 127.0.0.1:8081

backend local_https_vpn
    mode tcp
    server vpn_https 127.0.0.1:8443

backend websvcs_http_proxy
    mode http
    server websvcs_http {{ websvcs.ip }}:80 send-proxy-v2

backend websvcs_https_proxy
    mode tcp
    server websvcs_https {{ websvcs.ip }}:443 send-proxy-v2

backend secsvcs_http_proxy
    mode http
    server secsvcs_http {{ secsvcs.ip }}:80 send-proxy-v2

backend secsvcs_https_proxy
    mode tcp
    server secsvcs_https {{ secsvcs.ip }}:443 send-proxy-v2

backend homesvcs_http_proxy
    mode http
    server homesvcs_http {{ homesvcs.ip }}:80 send-proxy-v2

backend homesvcs_https_proxy
    mode tcp
    server homesvcs_https {{ homesvcs.ip }}:443 send-proxy-v2

backend vpnui_https_fwd
    mode tcp
    server fwd vpn-ui.{{ site.url }}:10443 send-proxy-v2

backend local_http_vpnui
    mode http
    option forwardfor
    server vpnui 127.0.0.1:5000
